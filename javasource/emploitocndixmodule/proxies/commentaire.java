// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emploitocndixmodule.proxies;

public class commentaire
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject commentaireMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "emploiTocndixModule.commentaire";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		avis("avis"),
		commentaire("commentaire"),
		candidat_commentaire("emploiTocndixModule.candidat_commentaire");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public commentaire(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "emploiTocndixModule.commentaire"));
	}

	protected commentaire(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject commentaireMendixObject)
	{
		if (commentaireMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("emploiTocndixModule.commentaire", commentaireMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a emploiTocndixModule.commentaire");

		this.commentaireMendixObject = commentaireMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'commentaire.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static emploitocndixmodule.proxies.commentaire initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emploitocndixmodule.proxies.commentaire.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emploitocndixmodule.proxies.commentaire initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emploitocndixmodule.proxies.commentaire(context, mendixObject);
	}

	public static emploitocndixmodule.proxies.commentaire load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emploitocndixmodule.proxies.commentaire.initialize(context, mendixObject);
	}

	public static java.util.List<emploitocndixmodule.proxies.commentaire> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emploitocndixmodule.proxies.commentaire> result = new java.util.ArrayList<emploitocndixmodule.proxies.commentaire>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//emploiTocndixModule.commentaire" + xpathConstraint))
			result.add(emploitocndixmodule.proxies.commentaire.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of avis
	 */
	public final java.lang.String getavis()
	{
		return getavis(getContext());
	}

	/**
	 * @param context
	 * @return value of avis
	 */
	public final java.lang.String getavis(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.avis.toString());
	}

	/**
	 * Set value of avis
	 * @param avis
	 */
	public final void setavis(java.lang.String avis)
	{
		setavis(getContext(), avis);
	}

	/**
	 * Set value of avis
	 * @param context
	 * @param avis
	 */
	public final void setavis(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String avis)
	{
		getMendixObject().setValue(context, MemberNames.avis.toString(), avis);
	}

	/**
	 * @return value of commentaire
	 */
	public final java.lang.String getcommentaire()
	{
		return getcommentaire(getContext());
	}

	/**
	 * @param context
	 * @return value of commentaire
	 */
	public final java.lang.String getcommentaire(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.commentaire.toString());
	}

	/**
	 * Set value of commentaire
	 * @param commentaire
	 */
	public final void setcommentaire(java.lang.String commentaire)
	{
		setcommentaire(getContext(), commentaire);
	}

	/**
	 * Set value of commentaire
	 * @param context
	 * @param commentaire
	 */
	public final void setcommentaire(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String commentaire)
	{
		getMendixObject().setValue(context, MemberNames.commentaire.toString(), commentaire);
	}

	/**
	 * @return value of candidat_commentaire
	 */
	public final emploitocndixmodule.proxies.candidat getcandidat_commentaire() throws com.mendix.core.CoreException
	{
		return getcandidat_commentaire(getContext());
	}

	/**
	 * @param context
	 * @return value of candidat_commentaire
	 */
	public final emploitocndixmodule.proxies.candidat getcandidat_commentaire(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emploitocndixmodule.proxies.candidat result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.candidat_commentaire.toString());
		if (identifier != null)
			result = emploitocndixmodule.proxies.candidat.load(context, identifier);
		return result;
	}

	/**
	 * Set value of candidat_commentaire
	 * @param candidat_commentaire
	 */
	public final void setcandidat_commentaire(emploitocndixmodule.proxies.candidat candidat_commentaire)
	{
		setcandidat_commentaire(getContext(), candidat_commentaire);
	}

	/**
	 * Set value of candidat_commentaire
	 * @param context
	 * @param candidat_commentaire
	 */
	public final void setcandidat_commentaire(com.mendix.systemwideinterfaces.core.IContext context, emploitocndixmodule.proxies.candidat candidat_commentaire)
	{
		if (candidat_commentaire == null)
			getMendixObject().setValue(context, MemberNames.candidat_commentaire.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.candidat_commentaire.toString(), candidat_commentaire.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return commentaireMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emploitocndixmodule.proxies.commentaire that = (emploitocndixmodule.proxies.commentaire) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "emploiTocndixModule.commentaire";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
